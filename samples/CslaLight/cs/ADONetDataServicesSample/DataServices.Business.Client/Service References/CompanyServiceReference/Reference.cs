//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Original file name:
// Generation date: 9/16/2008 1:52:49 PM
namespace DataServices.Business.CompanyServiceReference
{
    
    /// <summary>
    /// There are no comments for CompanyEntities in the schema.
    /// </summary>
    public partial class CompanyEntities : global::System.Data.Services.Client.DataServiceContext
    {
        /// <summary>
        /// Initialize a new CompanyEntities object.
        /// </summary>
        public CompanyEntities(global::System.Uri serviceRoot) : 
                base(serviceRoot)
        {
            this.ResolveName = new global::System.Func<global::System.Type, string>(this.ResolveNameFromType);
            this.ResolveType = new global::System.Func<string, global::System.Type>(this.ResolveTypeFromName);
            this.OnContextCreated();
        }
        partial void OnContextCreated();
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        protected global::System.Type ResolveTypeFromName(string typeName)
        {
            if (typeName.StartsWith("CompanyModel", global::System.StringComparison.Ordinal))
            {
                return this.GetType().Assembly.GetType(string.Concat("DataServices.Business.CompanyServiceReference", typeName.Substring(12)), true);
            }
            return null;
        }
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        protected string ResolveNameFromType(global::System.Type clientType)
        {
            if (clientType.Namespace.Equals("DataServices.Business.CompanyServiceReference", global::System.StringComparison.Ordinal))
            {
                return string.Concat("CompanyModel.", clientType.Name);
            }
            return null;
        }
        /// <summary>
        /// There are no comments for Companies in the schema.
        /// </summary>
        public global::System.Data.Services.Client.DataServiceQuery<Companies> Companies
        {
            get
            {
                if ((this._Companies == null))
                {
                    this._Companies = base.CreateQuery<Companies>("Companies");
                }
                return this._Companies;
            }
        }
        private global::System.Data.Services.Client.DataServiceQuery<Companies> _Companies;
        /// <summary>
        /// There are no comments for Users in the schema.
        /// </summary>
        public global::System.Data.Services.Client.DataServiceQuery<Users> Users
        {
            get
            {
                if ((this._Users == null))
                {
                    this._Users = base.CreateQuery<Users>("Users");
                }
                return this._Users;
            }
        }
        private global::System.Data.Services.Client.DataServiceQuery<Users> _Users;
        /// <summary>
        /// There are no comments for Companies in the schema.
        /// </summary>
        public void AddToCompanies(Companies companies)
        {
            base.AddObject("Companies", companies);
        }
        /// <summary>
        /// There are no comments for Users in the schema.
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }
    }
    /// <summary>
    /// There are no comments for CompanyModel.Companies in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CompanyId
    /// </KeyProperties>
    [global::System.Data.Services.Common.DataServiceKeyAttribute("CompanyId")]
    public partial class Companies
    {
        /// <summary>
        /// Create a new Companies object.
        /// </summary>
        /// <param name="companyId">Initial value of CompanyId.</param>
        /// <param name="companyName">Initial value of CompanyName.</param>
        /// <param name="dateAdded">Initial value of DateAdded.</param>
        public static Companies CreateCompanies(int companyId, string companyName, global::System.DateTime dateAdded)
        {
            Companies companies = new Companies();
            companies.CompanyId = companyId;
            companies.CompanyName = companyName;
            companies.DateAdded = dateAdded;
            return companies;
        }
        /// <summary>
        /// There are no comments for Property CompanyId in the schema.
        /// </summary>
        public int CompanyId
        {
            get
            {
                return this._CompanyId;
            }
            set
            {
                this.OnCompanyIdChanging(value);
                this._CompanyId = value;
                this.OnCompanyIdChanged();
            }
        }
        private int _CompanyId;
        partial void OnCompanyIdChanging(int value);
        partial void OnCompanyIdChanged();
        /// <summary>
        /// There are no comments for Property CompanyName in the schema.
        /// </summary>
        public string CompanyName
        {
            get
            {
                return this._CompanyName;
            }
            set
            {
                this.OnCompanyNameChanging(value);
                this._CompanyName = value;
                this.OnCompanyNameChanged();
            }
        }
        private string _CompanyName;
        partial void OnCompanyNameChanging(string value);
        partial void OnCompanyNameChanged();
        /// <summary>
        /// There are no comments for Property DateAdded in the schema.
        /// </summary>
        public global::System.DateTime DateAdded
        {
            get
            {
                return this._DateAdded;
            }
            set
            {
                this.OnDateAddedChanging(value);
                this._DateAdded = value;
                this.OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    }
    /// <summary>
    /// There are no comments for CompanyModel.Users in the schema.
    /// </summary>
    /// <KeyProperties>
    /// UserId
    /// </KeyProperties>
    [global::System.Data.Services.Common.DataServiceKeyAttribute("UserId")]
    public partial class Users
    {
        /// <summary>
        /// Create a new Users object.
        /// </summary>
        /// <param name="userId">Initial value of UserId.</param>
        /// <param name="userName">Initial value of UserName.</param>
        /// <param name="password">Initial value of Password.</param>
        /// <param name="role">Initial value of Role.</param>
        public static Users CreateUsers(int userId, string userName, string password, string role)
        {
            Users users = new Users();
            users.UserId = userId;
            users.UserName = userName;
            users.Password = password;
            users.Role = role;
            return users;
        }
        /// <summary>
        /// There are no comments for Property UserId in the schema.
        /// </summary>
        public int UserId
        {
            get
            {
                return this._UserId;
            }
            set
            {
                this.OnUserIdChanging(value);
                this._UserId = value;
                this.OnUserIdChanged();
            }
        }
        private int _UserId;
        partial void OnUserIdChanging(int value);
        partial void OnUserIdChanged();
        /// <summary>
        /// There are no comments for Property UserName in the schema.
        /// </summary>
        public string UserName
        {
            get
            {
                return this._UserName;
            }
            set
            {
                this.OnUserNameChanging(value);
                this._UserName = value;
                this.OnUserNameChanged();
            }
        }
        private string _UserName;
        partial void OnUserNameChanging(string value);
        partial void OnUserNameChanged();
        /// <summary>
        /// There are no comments for Property Password in the schema.
        /// </summary>
        public string Password
        {
            get
            {
                return this._Password;
            }
            set
            {
                this.OnPasswordChanging(value);
                this._Password = value;
                this.OnPasswordChanged();
            }
        }
        private string _Password;
        partial void OnPasswordChanging(string value);
        partial void OnPasswordChanged();
        /// <summary>
        /// There are no comments for Property Role in the schema.
        /// </summary>
        public string Role
        {
            get
            {
                return this._Role;
            }
            set
            {
                this.OnRoleChanging(value);
                this._Role = value;
                this.OnRoleChanged();
            }
        }
        private string _Role;
        partial void OnRoleChanging(string value);
        partial void OnRoleChanged();
    }
}
